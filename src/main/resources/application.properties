#chemin d'accès à la base de donnée
#spring.datasource.url=jdbc:mysql://172.17.0.2:3306/projet_taa
#utilisateur de la base de données
#spring.datasource.username=root
#mot de passe de l'utilisateur de la base de données
#spring.datasource.password=root

#server.port=${port:9200}





 spring.h2.console.enabled=true

logging.level.org.hibernate.SQL=debug

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.

spring.datasource.url = jdbc:mysql://172.17.0.2:3306/projet_taa
#spring.datasource.url = jdbc:mysql://localhost/projet_taa
#spring.datasource.url = jdbc:mysql://mysql.istic.univ-rennes1.fr/base_16014040

spring.datasource.username = root
#spring.datasource.username = user_16014040

spring.datasource.password = root
#spring.datasource.password = #user_16014040#

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port=${port:9200}